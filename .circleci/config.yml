version: 2.1
jobs:
  validate_package_appinspect:
    docker:
      # specify the version you desire here
      - image: circleci/python:3

    working_directory: ~/

    steps:
      # Slack
      - slack/notify:
          channel: C015JGRS4VA
          color: '#42e2f4'
          mentions: 'U23ACBMB5,U7CCVF98S'
          message: ビルド開始するで
          webhook: ${SLACK_WEBHOOK}

      - run:
          name: mkdir
          command: |
            mkdir ~/circleci

      - checkout:
          path: ~/circleci

      - run:
          name: remove unpackaged files
          command: |
            rm -r -f ~/circleci/.circleci
            rm -r -f ~/circleci/.git
            rm -r -f ~/circleci/img
            rm -r -f ~/circleci/local
            rm -f ~/circleci/.gitignore

      - run:
          name: setup virtualenv
          command: |
            pip3 install virtualenv
            mkdir ~/virtualenv
            cd ~/virtualenv
            virtualenv slim
            cd slim
            source bin/activate
            pip3 install semantic_version
            wget https://download.splunk.com/misc/packaging-toolkit/splunk-packaging-toolkit-1.0.1.tar.gz \
              -O splunk-packaging-toolkit.tar.gz
            # Permission error without sudo
            sudo pip3 install splunk-packaging-toolkit.tar.gz
            PYTHON_HOME=~/virtualenv/slim
            PATH="${PYTHON_HOME}/bin:$PATH"

      - run:
          name: validate app
          command: |
            slim validate ~/circleci > ~/circleci_validate.txt

      - store_artifacts:
          path: ~/circleci_validate.txt

      - run:
          name: package app
          command: |
            slim package -o ~/ ~/circleci
            echo 'export PACKAGE_FILE=`ls ~/circleci-*.tar.gz`' >> $BASH_ENV

      - store_artifacts:
          path: $PACKAGE_FILE

      - run:
          name: get appinspect token
          command: |
            echo 'export APPINSPECT_TOKEN=`curl -X GET \
            -u $SPLUNKCOM_USER:$SPLUNKCOM_PASSWORD \
            --url "https://api.splunk.com/2.0/rest/login/splunk" | jq ".data.token"`' >> $BASH_ENV

      - run:
          name: submit an app validation
          command: |
            curl -X POST \
            -H "Authorization: bearer $APPINSPECT_TOKEN" \
            -H "Cache-Control: no-cache" \
            -F "app_package=@\"$PACKAGE_FILE\"" \
            --url "https://appinspect.splunk.com/v1/app/validate" > ~/circleci_appinspect.json

      - store_artifacts:
          path: ~/circleci_appinspect.json

      - run:
          name: submit an app cloud validation
          command: |
            curl -X POST \
            -H "Authorization: bearer $APPINSPECT_TOKEN" \
            -H "Cache-Control: no-cache" \
            -F "app_package=@\"$PACKAGE_FILE\"" \
            -F "included_tags=cloud" \
            --url "https://appinspect.splunk.com/v1/app/validate" > ~/circleci_appinspect_cloud.json

      - store_artifacts:
          path: ~/circleci_appinspect_cloud.json

      # Slack
      - slack/status:
          #fail_only: true
          mentions: 'U23ACBMB5,U7CCVF98S'
          only_for_branches: master
          webhook: ${SLACK_WEBHOOK}

      # Splunk
      - splunk/build-event:
          subject: notificatoin from build job
          message: Successfully finished build
          splunk_hec_host: '${SPLUNK_HEC_HOST}'
          splunk_hec_port: 8088
          splunk_hec_protocol: http
          splunk_hec_token: '${SPLUNK_HEC_TOKEN}'
          splunk_index: circleci

orbs:
  slack: circleci/slack@3.4.2
  signalfx: kikeyama/signalfx@0.1.1
  splunk: kikeyama/splunk@0.1.0

workflows:
  main:
    jobs:
      - validate_package_appinspect
      - splunk/workflow-event:
          subject: notificatoin from main workflow
          message: Successfully finisheed deploying to my cluster
          splunk_hec_host: '${SPLUNK_HEC_HOST}'
          splunk_hec_port: 8088
          splunk_hec_protocol: http
          splunk_hec_token: '${SPLUNK_HEC_TOKEN}'
          splunk_index: circleci
          requires:
            - validate_package_appinspect
